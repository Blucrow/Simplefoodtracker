@page "/scan"
@inject ISnackbar Snackbar



<div class="d-flex justify-center align-items-center" style="padding-top:2%">
	<MudPaper MaxWidth="600px">
		<MudStack Spacing="2" AlignItems="AlignItems.Center" Justify="Justify.Center">
			<MudButton FullWidth="true" Variant="Variant.Filled"
			Color="Color.Secondary"
			EndIcon="@Icons.Material.Filled.Scanner"
			Disabled="@_disableButton"
			OnClick="@StartScan">Scan Barcode</MudButton>
			<MudText Typo="Typo.body1">or enter Barcode manually</MudText>
			<MudTextField Variant="Variant.Outlined" T="string" Label="Barcode" InputType="InputType.Number" @bind-Value="@_manualBarcode" Immediate="true"/>
			<MudButton Variant="Variant.Filled"
					   FullWidth="true"
					   Color="Color.Secondary"
					   EndIcon="@Icons.Material.Filled.Search"
					   Disabled="@_disableButton"
					   OnClick="@(async () => await OnBarcodeScanned(_manualBarcode))">Search</MudButton>
			@if (_scanEnabled)
			{
				<BarcodeScanner OnScanned="@OnBarcodeScanned"/>
			}
			@if(Product != null)
			{
				<SearchProductResult Product="@Product"></SearchProductResult>
			}
		</MudStack>
	</MudPaper>
</div>

<MudOverlay AutoClose="false" Visible="@_loading" DarkBackground>
	<MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>
@code {

	[Inject]
	public CustomNavigationService Nav { get; set; } = null!;
	[Inject]
	public IndexedDbAccessor DbAccess { get; set; } = null!;

	private bool _scanEnabled = false;
	private bool _loading = false;
	private bool _disableButton = false;
	private Product? Product = null;
	private string _manualBarcode = "";

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		var personalInfo = await DbAccess.LoadData<PersonalInfo>("info");
		if (personalInfo == null)
			Nav.NavigateTo("./create");
	}

	private void StartScan()
	{
		_disableButton = true;
		_scanEnabled = true;
		StateHasChanged();

	}


	public async Task OnBarcodeScanned(string code)
	{
		_loading = true;
		_scanEnabled = false;
		StateHasChanged();
		Product = await Foodservice.GetProductByBarcode(code);
		_loading = false;
		_disableButton = false;
		if(Product == null)
		{
			Snackbar.Add("Product not found. Please add it manually or try again", Severity.Error);
		}
		StateHasChanged();
	}


}
