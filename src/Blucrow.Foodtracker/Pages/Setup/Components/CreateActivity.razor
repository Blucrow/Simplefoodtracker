<MudCard>
	<MudCardHeader>
		<CardHeaderContent>
			<MudText Typo="Typo.h6">What is your weekly activity?</MudText>
		</CardHeaderContent>
	</MudCardHeader>
	<MudCardContent>
		<MudRadioGroup @bind-Value="@_activityLevel">
			<MudStack>
				<MudRadio Color="Color.Info" Value="0">Little to no exercise</MudRadio>
				<MudRadio Color="Color.Warning" Value="1">Exercise 1-3 days per week</MudRadio>
				<MudRadio Color="Color.Primary" Value="2">Exercise 3-5 days per week</MudRadio>
				<MudRadio Color="Color.Tertiary" Value="3">Exercise 6-7 days per week</MudRadio>
				<MudRadio Color="Color.Error" Value="4">Very intense exercise daily or physical job</MudRadio>
			</MudStack>
		</MudRadioGroup>
	</MudCardContent>
	<div class="d-flex justify-center">
		<MudCardActions>
			<MudButton Variant="Variant.Filled" OnClick="@Validate"
			Color="Color.Primary" EndIcon="@Icons.Material.Filled.ArrowRight">Next</MudButton>
		</MudCardActions>
	</div>
</MudCard>

@code {
	[Parameter]
	public PersonalInfo Info { get; set; } = null!;

	[Parameter]
	public EventCallback OnNext { get; set; }

	private int _activityLevel = 0;

	private async Task Validate()
	{
		switch (_activityLevel)
		{
			case 0:
				Info.Activity = CalorieCalculator.ActivityLevel.Sedentary;
				break;
			case 1:
				Info.Activity = CalorieCalculator.ActivityLevel.LightlyActive;
				break;
			case 2:
				Info.Activity = CalorieCalculator.ActivityLevel.ModeratelyActive;
				break;
			case 3:
				Info.Activity = CalorieCalculator.ActivityLevel.VeryActive;
				break;
			case 4:
				Info.Activity = CalorieCalculator.ActivityLevel.ExtraActive;
				break;
		}
		Info.CalucalteDailyKcal();
		await OnNext.InvokeAsync();

	}
	private async Task OnEnter(KeyboardEventArgs e)
	{
		if (e is null || e.Code == "Enter" || e.Code == "NumpadEnter")
		{
			await Validate();
		}
	}

}
